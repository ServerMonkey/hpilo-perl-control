#!/bin/sh

# run from anywhere
APP_DIR_FULL=$(realpath "$0")
APP_DIR=$(dirname "$APP_DIR_FULL")
cd "$APP_DIR" || exit 1

# automatic increase minor version number whith each build
VERSION_FILE="version"
VERSION_MAJOR=$(sed -n '1p' $VERSION_FILE)
VERSION_MINOR=$(sed -n '2p' $VERSION_FILE)
VERSION_MINOR_NEW=$((1 + VERSION_MINOR))
sed -i "2 s/$VERSION_MINOR\$/$VERSION_MINOR_NEW/g" $VERSION_FILE
VERSION="$VERSION_MAJOR.$VERSION_MINOR_NEW"

# variables
NAME="hpilo-perl-control"
RELEASES="releases"
TARGET="DEBIAN"
SCRIPTS="hpilo-base-scripts.tgz"
SCRIPTS_MD5="a88c39344cc9dcd774c79e45b0eab7b6"
PATH_BASE="./$RELEASES/$NAME-$VERSION"
PATH_INSTALL="$PATH_BASE/usr/local"
PATH_BIN="$PATH_INSTALL/bin"
PATH_SHARE="$PATH_INSTALL/share/$NAME"
PATH_LIB="$PATH_BASE/var/lib/$NAME"
PATH_TARGET="$PATH_BASE/$TARGET"

# delete the old build
echo "Cleaning up old build"
rm -rf "$PATH_BASE"

# copy relevant files from source to release
echo "Copying relevant source files"
mkdir -p "$PATH_SHARE"
cp -t "$PATH_SHARE" "README.md" "copyright" || exit 1
mkdir -p "$PATH_BIN"
chmod 0755 "hpilo"
cp -t "$PATH_BIN" "hpilo" || exit 1

# try to download hpilo scripts if they don't already exist
if [ ! -f "$SCRIPTS" ]; then
    FILENAME_IN="linux-LOsamplescripts5.40.0.tgz"
    echo "Downloading $FILENAME_IN ..."
    if ! wget -q "https://downloads.hpe.com/pub/softlib2/software1/pubsw-linux/p1177391524/v189717/$FILENAME_IN" -O "$SCRIPTS"; then
        echo "Could not download $SCRIPTS" >&2
        exit 1
    fi
fi

# verify archive
echo "Verifying $SCRIPTS"
if ! echo "$SCRIPTS_MD5 $SCRIPTS" | md5sum -c; then
    echo "md5sum verification failed!" >&2
    exit 1
fi

# sort script files
echo "Sorting script files"
mkdir -p "$PATH_LIB"
cp -t "$PATH_LIB" "scripts/"*.xml || exit 1
tar zxf "$SCRIPTS" -C "$PATH_LIB"
mv -f "$PATH_LIB/"linux-LOsamplescripts*.txt "$PATH_SHARE/manual_scripting.txt"
chmod 0644 "$PATH_SHARE/manual_scripting.txt"
mv -f "$PATH_LIB/iLO_perl_xml.pdf" "$PATH_SHARE/manual_locfg.pl.pdf"
chmod 0644 "$PATH_SHARE/manual_locfg.pl.pdf"
mv -f "$PATH_LIB/locfg.pl" "$PATH_BIN/locfg.pl"
chmod 0755 "$PATH_BIN/locfg.pl"
rm -f "$PATH_LIB/vspconfig.pl"
rm -f "$PATH_LIB/hponcfg_reformat.xsl"
chmod 0644 "$PATH_LIB/"*.xml

# create Debian control file
echo "Creating CONTROL file"
mkdir -p "$PATH_TARGET"
echo "Package: $NAME
Version: $VERSION
Section: net
Priority: optional
Architecture: all
Depends: libsocket6-perl (>= 0.29)
Maintainer: Bodo Endres <dev@muspekaren.se>
Description: HP iLO Perl Control
 Manage HP Servers via XML scripts.
" >"$PATH_TARGET/control"

# build
echo "Building"
fakeroot dpkg-deb --build "$PATH_BASE"

# pack source files
echo "Packing source"
zip -q -r "$RELEASES/$NAME-$VERSION.source.zip" ./* \
    -x $RELEASES\* \
    -x .*\* \
    -x ./*DEV_\*
wait

# replace latest version
cp "$PATH_BASE.deb" "$RELEASES/$NAME-LATEST.deb"
cp "$PATH_BASE.source.zip" "$RELEASES/$NAME-LATEST.source.zip"

# clean up
echo "Clean up"
rm -rf "$PATH_BASE"

# check
echo "Checking:"
lintian -c "$PATH_BASE.deb"
